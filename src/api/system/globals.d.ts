/* tslint:disable */
/* eslint-disable */
/**
 * 系统模块接口文档 - version 1.0.0
 *
 * 用户、角色、权限等接口文档
 *
 * OpenAPI version: 3.0.1
 *
 * Contact:
 *
 * NOTE: This file is auto generated by the alova's vscode plugin.
 *
 * https://alova.js.org/devtools/vscode
 *
 * **Do not edit the file manually.**
 */
import type { Alova, AlovaMethodCreateConfig, AlovaGenerics, Method } from 'alova';
import type { $$userConfigMap, alovaInstance } from '.';
import type apiDefinitions from './apiDefinitions';

type CollapsedAlova = typeof alovaInstance;
type UserMethodConfigMap = typeof $$userConfigMap;

type Alova2MethodConfig<Responded> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Omit<
        AlovaMethodCreateConfig<
          AlovaGenerics<Responded, any, RequestConfig, Response, ResponseHeader, L1Cache, L2Cache, SE>,
          any,
          Responded
        >,
        'params'
      >
    : never;

// Extract the return type of transform function that define in $$userConfigMap, if it not exists, use the default type.
type ExtractUserDefinedTransformed<
  DefinitionKey extends keyof typeof apiDefinitions,
  Default
> = DefinitionKey extends keyof UserMethodConfigMap
  ? UserMethodConfigMap[DefinitionKey]['transform'] extends (...args: any[]) => any
    ? Awaited<ReturnType<UserMethodConfigMap[DefinitionKey]['transform']>>
    : Default
  : Default;
type Alova2Method<
  Responded,
  DefinitionKey extends keyof typeof apiDefinitions,
  CurrentConfig extends Alova2MethodConfig<any>
> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Method<
        AlovaGenerics<
          CurrentConfig extends undefined
            ? ExtractUserDefinedTransformed<DefinitionKey, Responded>
            : CurrentConfig['transform'] extends (...args: any[]) => any
              ? Awaited<ReturnType<CurrentConfig['transform']>>
              : ExtractUserDefinedTransformed<DefinitionKey, Responded>,
          any,
          RequestConfig,
          Response,
          ResponseHeader,
          L1Cache,
          L2Cache,
          SE
        >
      >
    : never;

export type BaseUserVo = {
  /**
   * 用户id
   */
  id?: number;
  /**
   * 用户账号
   */
  userName?: string;
  /**
   * 用户名称
   */
  nickName?: string;
  /**
   * 联系方式
   */
  phone?: string;
  /**
   * 用户头像
   */
  avatar?: string;
  /**
   * 邮箱
   */
  email?: string;
  /**
   * 租户ID
   */
  tenantId?: string;
  /**
   * 用户主题(0:浅色;1:深色)
   */
  theme?: number;
  /**
   * 上次登录IP
   */
  loginIp?: string;
  /**
   * 上次登录时间
   */
  loginDate?: string;
  /**
   * 创建时间
   */
  createTime?: string;
};
export type SysMenuDo = {
  id?: number;
  /**
   * 创建人
   */
  createBy?: number;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新人
   */
  updateBy?: number;
  /**
   * 更新时间
   */
  updateTime?: string;
  /**
   * 备注
   */
  remark?: string;
  tenantId?: string;
  params?: Record<string, object>;
  delFlag?: number;
  idStr?: string;
  labelStr?: string;
  flagStr?: string;
  /**
   * [required]
   */
  appId: number;
  /**
   * [required]
   */
  menuName: string;
  parentName?: string;
  parentId?: number;
  /**
   * [required]
   */
  menuFlag: string;
  menuType?: number;
  menuPosition?: number;
  jumpType?: number;
  path?: string;
  isNewTab?: number;
  /**
   * [required]
   */
  orderNum: number;
  status?: number;
  icon?: string;
  children?: SysMenuDo[];
  menuFunctions?: string;
};
export type SysAppGroupDo = {
  id?: number;
  /**
   * 创建人
   */
  createBy?: number;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新人
   */
  updateBy?: number;
  /**
   * 更新时间
   */
  updateTime?: string;
  /**
   * 备注
   */
  remark?: string;
  tenantId?: string;
  params?: Record<string, object>;
  delFlag?: number;
  idStr?: string;
  labelStr?: string;
  flagStr?: string;
  /**
   * [required]
   */
  appGroupName: string;
  appGroupType?: number;
  appGroupFlag?: string;
  /**
   * [required]
   */
  appGroupSort: number;
  status?: number;
};
export type SysAppVersionDo = {
  id?: number;
  /**
   * 创建人
   */
  createBy?: number;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新人
   */
  updateBy?: number;
  /**
   * 更新时间
   */
  updateTime?: string;
  /**
   * 备注
   */
  remark?: string;
  tenantId?: string;
  params?: Record<string, object>;
  delFlag?: number;
  idStr?: string;
  labelStr?: string;
  flagStr?: string;
  appId?: number;
  status?: number;
  version?: string;
};
export type SysAppDo = {
  id?: number;
  /**
   * 创建人
   */
  createBy?: number;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新人
   */
  updateBy?: number;
  /**
   * 更新时间
   */
  updateTime?: string;
  /**
   * 备注
   */
  remark?: string;
  tenantId?: string;
  params?: Record<string, object>;
  delFlag?: number;
  idStr?: string;
  labelStr?: string;
  flagStr?: string;
  /**
   * [required]
   */
  appName: string;
  appFlag?: string;
  serverUrl?: string;
  homeUrl?: string;
  version?: string;
  /**
   * [required]
   */
  appSort: number;
  status?: number;
  /**
   * [required]
   */
  appGroupId: number;
  appGroupFlag?: string;
  appGroup?: SysAppGroupDo;
  appGroupName?: string;
  icon?: string;
  logo?: string;
  appVersion?: SysAppVersionDo;
};
export type Habbjejdc = {
  /**
   * 用户信息
   */
  userInfo?: BaseUserVo;
  /**
   * 前端菜单树
   */
  menuList?: SysMenuDo[];
  /**
   * 后端菜单树
   */
  backMenuList?: SysMenuDo[];
  /**
   * 功能权限列表
   */
  roleList?: string[];
  /**
   * 应用信息
   */
  appInfo?: SysAppDo;
  /**
   * 数据权限汇总
   */
  roleDataMap?: Record<string, number[]>;
};
export type Ajaxresult = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 消息
   */
  msg?: string;
  /**
   * 对象
   */
  data?: Habbjejdc;
};
declare global {
  interface System {
    general: {
      /**
       * ---
       *
       * [POST] 登录后初始化用户信息并获取菜单树及权限列表
       *
       * **path:** /system/workbenchConfig/getBaseInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // [required]
       *   appId: number
       *   // 签名
       *   sign?: unknown
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 状态码
       *   code?: number
       *   // 消息
       *   msg?: string
       *   // 对象
       *   data?: {
       *     // 用户信息
       *     userInfo?: {
       *       // 用户id
       *       id?: number
       *       // 用户账号
       *       userName?: string
       *       // 用户名称
       *       nickName?: string
       *       // 联系方式
       *       phone?: string
       *       // 用户头像
       *       avatar?: string
       *       // 邮箱
       *       email?: string
       *       // 租户ID
       *       tenantId?: string
       *       // 用户主题(0:浅色;1:深色)
       *       theme?: number
       *       // 上次登录IP
       *       loginIp?: string
       *       // 上次登录时间
       *       loginDate?: string
       *       // 创建时间
       *       createTime?: string
       *     }
       *     // 前端菜单树
       *     menuList?: Array<{
       *       id?: number
       *       // 创建人
       *       createBy?: number
       *       // 创建时间
       *       createTime?: string
       *       // 更新人
       *       updateBy?: number
       *       // 更新时间
       *       updateTime?: string
       *       // 备注
       *       remark?: string
       *       tenantId?: string
       *       params?: Record<string, object>
       *       delFlag?: number
       *       idStr?: string
       *       labelStr?: string
       *       flagStr?: string
       *       // [required]
       *       appId: number
       *       // [required]
       *       menuName: string
       *       parentName?: string
       *       parentId?: number
       *       // [required]
       *       menuFlag: string
       *       menuType?: number
       *       menuPosition?: number
       *       jumpType?: number
       *       path?: string
       *       isNewTab?: number
       *       // [required]
       *       orderNum: number
       *       status?: number
       *       icon?: string
       *       children?: Array<SysMenuDo>
       *       menuFunctions?: string
       *     }>
       *     // 后端菜单树
       *     backMenuList?: Array<SysMenuDo>
       *     // 功能权限列表
       *     roleList?: string[]
       *     // 应用信息
       *     appInfo?: {
       *       id?: number
       *       // 创建人
       *       createBy?: number
       *       // 创建时间
       *       createTime?: string
       *       // 更新人
       *       updateBy?: number
       *       // 更新时间
       *       updateTime?: string
       *       // 备注
       *       remark?: string
       *       tenantId?: string
       *       params?: Record<string, object>
       *       delFlag?: number
       *       idStr?: string
       *       labelStr?: string
       *       flagStr?: string
       *       // [required]
       *       appName: string
       *       appFlag?: string
       *       serverUrl?: string
       *       homeUrl?: string
       *       version?: string
       *       // [required]
       *       appSort: number
       *       status?: number
       *       // [required]
       *       appGroupId: number
       *       appGroupFlag?: string
       *       appGroup?: {
       *         id?: number
       *         // 创建人
       *         createBy?: number
       *         // 创建时间
       *         createTime?: string
       *         // 更新人
       *         updateBy?: number
       *         // 更新时间
       *         updateTime?: string
       *         // 备注
       *         remark?: string
       *         tenantId?: string
       *         params?: Record<string, object>
       *         delFlag?: number
       *         idStr?: string
       *         labelStr?: string
       *         flagStr?: string
       *         // [required]
       *         appGroupName: string
       *         appGroupType?: number
       *         appGroupFlag?: string
       *         // [required]
       *         appGroupSort: number
       *         status?: number
       *       }
       *       appGroupName?: string
       *       icon?: string
       *       logo?: string
       *       appVersion?: {
       *         id?: number
       *         // 创建人
       *         createBy?: number
       *         // 创建时间
       *         createTime?: string
       *         // 更新人
       *         updateBy?: number
       *         // 更新时间
       *         updateTime?: string
       *         // 备注
       *         remark?: string
       *         tenantId?: string
       *         params?: Record<string, object>
       *         delFlag?: number
       *         idStr?: string
       *         labelStr?: string
       *         flagStr?: string
       *         appId?: number
       *         status?: number
       *         version?: string
       *       }
       *     }
       *     // 数据权限汇总
       *     roleDataMap?: Record<string, number[]>
       *   }
       * }
       * ```
       */
      getInitInfo<
        Config extends Alova2MethodConfig<Ajaxresult> & {
          params: {
            /**
             * [required]
             */
            appId: number;
            /**
             * 签名
             */
            sign?: unknown;
          };
        }
      >(
        config: Config
      ): Alova2Method<Ajaxresult, 'general.getInitInfo', Config>;
    };
  }

  var System: System;
}
