/* tslint:disable */
/* eslint-disable */
/**
 * 鉴权接口文档 - version 1.0.0
 *
 * 用户登录、注册、注销、获取用户信息等接口文档
 *
 * OpenAPI version: 3.0.1
 *
 * Contact:
 *
 * NOTE: This file is auto generated by the alova's vscode plugin.
 *
 * https://alova.js.org/devtools/vscode
 *
 * **Do not edit the file manually.**
 */
import type { Alova, AlovaMethodCreateConfig, AlovaGenerics, Method } from 'alova';
import type { $$userConfigMap, alovaInstance } from '.';
import type apiDefinitions from './apiDefinitions';

type CollapsedAlova = typeof alovaInstance;
type UserMethodConfigMap = typeof $$userConfigMap;

type Alova2MethodConfig<Responded> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Omit<
        AlovaMethodCreateConfig<
          AlovaGenerics<Responded, any, RequestConfig, Response, ResponseHeader, L1Cache, L2Cache, SE>,
          any,
          Responded
        >,
        'params'
      >
    : never;

// Extract the return type of transform function that define in $$userConfigMap, if it not exists, use the default type.
type ExtractUserDefinedTransformed<
  DefinitionKey extends keyof typeof apiDefinitions,
  Default
> = DefinitionKey extends keyof UserMethodConfigMap
  ? UserMethodConfigMap[DefinitionKey]['transform'] extends (...args: any[]) => any
    ? Awaited<ReturnType<UserMethodConfigMap[DefinitionKey]['transform']>>
    : Default
  : Default;
type Alova2Method<
  Responded,
  DefinitionKey extends keyof typeof apiDefinitions,
  CurrentConfig extends Alova2MethodConfig<any>
> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Method<
        AlovaGenerics<
          CurrentConfig extends undefined
            ? ExtractUserDefinedTransformed<DefinitionKey, Responded>
            : CurrentConfig['transform'] extends (...args: any[]) => any
              ? Awaited<ReturnType<CurrentConfig['transform']>>
              : ExtractUserDefinedTransformed<DefinitionKey, Responded>,
          any,
          RequestConfig,
          Response,
          ResponseHeader,
          L1Cache,
          L2Cache,
          SE
        >
      >
    : never;

export type AjaxResultString = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 消息
   */
  msg?: string;
  /**
   * 对象
   */
  data?: string;
};
export type LoginVo = {
  /**
   * 登录令牌
   */
  accessToken?: string;
  /**
   * 过期时长(单位:h,0表示永不过期)
   */
  expiresIn?: number;
};
export type AjaxResultLoginVo = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 消息
   */
  msg?: string;
  /**
   * 登录接口返回
   */
  data?: LoginVo;
};
declare global {
  interface Auth {
    general: {
      /**
       * ---
       *
       * [POST] 用户登出
       *
       * **path:** /auth/logout
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // 签名
       *   sign?: unknown
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 状态码
       *   code?: number
       *   // 消息
       *   msg?: string
       *   // 对象
       *   data?: string
       * }
       * ```
       */
      logout<
        Config extends Alova2MethodConfig<AjaxResultString> & {
          params: {
            /**
             * 签名
             */
            sign?: unknown;
          };
        }
      >(
        config: Config
      ): Alova2Method<AjaxResultString, 'general.logout', Config>;
      /**
       * ---
       *
       * [POST] 用户登录
       *
       * **path:** /auth/login
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   // 用户账号
       *   // [required]
       *   userName: string
       *   // 用户密码
       *   // [required]
       *   passWord: string
       *   // 租户编号
       *   // [required]
       *   tenantId: string
       *   // 登录过期时间
       *   // [required]
       *   expireTime: string
       *   // 签名
       *   sign?: unknown
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 状态码
       *   code?: number
       *   // 消息
       *   msg?: string
       *   // 登录接口返回
       *   data?: {
       *     // 登录令牌
       *     accessToken?: string
       *     // 过期时长(单位:h,0表示永不过期)
       *     expiresIn?: number
       *   }
       * }
       * ```
       */
      login<
        Config extends Alova2MethodConfig<AjaxResultLoginVo> & {
          params: {
            /**
             * 用户账号
             * [required]
             */
            userName: string;
            /**
             * 用户密码
             * [required]
             */
            passWord: string;
            /**
             * 租户编号
             * [required]
             */
            tenantId: string;
            /**
             * 登录过期时间
             * [required]
             */
            expireTime: string;
            /**
             * 签名
             */
            sign?: unknown;
          };
        }
      >(
        config: Config
      ): Alova2Method<AjaxResultLoginVo, 'general.login', Config>;
    };
  }

  var Auth: Auth;
}
